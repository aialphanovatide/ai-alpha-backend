services:
  db_dev:
    image: postgres:16
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB_DEV}
      POSTGRES_USER: ${POSTGRES_USER_DEV}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_DEV}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER_DEV} -d ${POSTGRES_DB_DEV}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    networks:
      - myapp_dev_network

  web_dev:
    build: .
    ports:
      - "9002:9002"
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DATABASE_URL_DEV=${DATABASE_URL_DEV}
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
      - REDIS_DB=3
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - NEWS_BOT_API_KEY=${NEWS_BOT_API_KEY}
      - FIREBASE_SERVICE_ACCOUNT_JSON=${FIREBASE_SERVICE_ACCOUNT_JSON}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - AWS_ACCESS=${AWS_ACCESS}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_PRODUCT_ALERTS=${SLACK_PRODUCT_ALERTS}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - CHANNEL_ID_AI_ALPHA_FOUNDERS=${CHANNEL_ID_AI_ALPHA_FOUNDERS}
      - CALL_TO_TRADE_TOPIC_ID=${CALL_TO_TRADE_TOPIC_ID}
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}

    depends_on:
      db_dev:
        condition: service_healthy
    command: sh -c "chmod +x ./script.sh && ./script.sh"
    networks:
      - myapp_dev_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5052:80"
    networks:
      - myapp_dev_network
    depends_on:
      - db_dev

  playwright:
    build:
      context: .
      dockerfile: Dockerfile.playwright
    volumes:
      - .:/app
    depends_on:
      - web_dev
    environment:
      - DISPLAY=:99
    cap_add:
      - SYS_ADMIN
    networks:
      - myapp_dev_network
   
  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "http"
      - "--domain=${NGROK_DOMAIN_DEV}"
      - "web_dev:9002"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    depends_on:
      - web_dev
    networks:
      - myapp_dev_network

networks:
  myapp_dev_network:
    name: myapp_dev_network

volumes:
  postgres_data_dev:
  pgadmin_data: