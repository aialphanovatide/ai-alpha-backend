services:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB_PROD}
      POSTGRES_USER: ${POSTGRES_USER_PROD}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_PROD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER_PROD} -d ${POSTGRES_DB_PROD}"]
      interval: 5s
      timeout: 5s
      retries: 3
    expose:
      - "5431:5432"
    networks:
      - myapp_network

  web:
    build: .
    ports:
      - "9003:9002"
    volumes:
      - ./app:/app/app:ro
      - ./migrations:/app/migrations:ro
    environment:
      - FLASK_ENV=production
      - DATABASE_URL_PROD=${DATABASE_URL_PROD}
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
      - REDIS_DB=2
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - NEWS_BOT_API_KEY=${NEWS_BOT_API_KEY}
      - FIREBASE_SERVICE_ACCOUNT_JSON=${FIREBASE_SERVICE_ACCOUNT_JSON}
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - AWS_ACCESS=${AWS_ACCESS}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_PRODUCT_ALERTS=${SLACK_PRODUCT_ALERTS}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "chmod +x ./script.sh && ./script.sh"
    networks:
      - myapp_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9003/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5053:80"
    networks:
      - myapp_network
    depends_on:
      - db

  playwright:
    build:
      context: .
      dockerfile: Dockerfile.playwright
    volumes:
      - .:/app
    depends_on:
      - web
    environment:
      - DISPLAY=:99
    cap_add:
      - SYS_ADMIN
    networks:
      - myapp_network

  ngrok:
    image: ngrok/ngrok:latest
    command:
      - "http"
      - "--domain=${NGROK_DOMAIN}"
      - "web:9003"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    depends_on:
      - web
    ports:
      - "4044:4040"
    networks:
      - myapp_network

networks:
  myapp_network:
    name: myapp_network

volumes:
  postgres_data:
  pgadmin_data: