version: '3.8'

services:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./restore_db.sh:/docker-entrypoint-initdb.d/restore_db.sh
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER_PROD} -d ${POSTGRES_DB_PROD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    expose:
      - "5432"
    networks:
      - myapp_network
    command: >
      bash -c "
        chmod +x /docker-entrypoint-initdb.d/restore_db.sh &&
        docker-entrypoint.sh postgres
      "

  web:
    build: .
    expose:
      - "9003"
    volumes:
      - ./app:/app/app:ro
      - ./migrations:/app/migrations:ro
    env_file:
      - .env
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER_PROD}:${POSTGRES_PASSWORD_PROD}@db:5432/${POSTGRES_DB_PROD}
      - REDIS_HOST=host.docker.internal
      - REDIS_PORT=6379
      - REDIS_DB=2
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "chmod +x ./script.sh && ./script.sh"
    networks:
      - myapp_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5053:80"
    networks:
      - myapp_network
    depends_on:
      - db

  playwright:
    build:
      context: .
      dockerfile: Dockerfile.playwright
    volumes:
      - .:/app
    depends_on:
      - web
    environment:
      - DISPLAY=:99
    cap_add:
      - SYS_ADMIN
    networks:
      - myapp_network

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "http"
      - "--domain=${NGROK_DOMAIN}"
      - "web:9003"
    env_file:
      - .env
    depends_on:
      - web
    networks:
      - myapp_network

networks:
  myapp_network:
    name: myapp_network

volumes:
  postgres_data:
  pgadmin_data: