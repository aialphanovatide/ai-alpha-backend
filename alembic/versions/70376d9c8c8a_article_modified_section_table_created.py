"""article modified, section table created

Revision ID: 70376d9c8c8a
Revises: 1ef11a055306
Create Date: 2024-10-28 14:44:56.592764

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '70376d9c8c8a'
down_revision: Union[str, None] = '1ef11a055306'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    existing_columns = [col['name'] for col in inspector.get_columns('article')]

    if 'section_id' not in existing_columns:
    # ### commands auto generated by Alembic - please adjust! ###
        op.add_column('article', sa.Column('section_id', sa.Integer(), nullable=False))
        op.alter_column('article', 'date',
                existing_type=sa.VARCHAR(),
                nullable=True)
        op.alter_column('article', 'title',
                existing_type=sa.VARCHAR(),
                nullable=True)
        op.alter_column('article', 'url',
                existing_type=sa.VARCHAR(),
                nullable=True)
        op.alter_column('article', 'created_at',
                existing_type=postgresql.TIMESTAMP(),
                nullable=True)
        op.create_foreign_key(None, 'article', 'sections', ['section_id'], ['id'], ondelete='CASCADE')
    pass
    # ### end Alembic commands ###


def downgrade() -> None:
    op.drop_column('article', 'section_id')
    op.drop_constraint(None, 'analysis', type_='foreignkey')
    op.create_foreign_key('analysis_coin_bot_id_fkey', 'analysis', 'coin_bot', ['coin_bot_id'], ['bot_id'], ondelete='CASCADE')
    pass
    # ### end Alembic commands ###
