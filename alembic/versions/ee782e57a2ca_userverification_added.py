"""userverification added

Revision ID: ee782e57a2ca
Revises: e7ee74b7b181
Create Date: 2024-10-22 11:09:09.212216

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ee782e57a2ca'
down_revision: Union[str, None] = 'e7ee74b7b181'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Drop existing foreign key constraints first
    op.drop_constraint('used_keywords_article_id_fkey', 'used_keywords', type_='foreignkey')
    op.drop_constraint('article_image_article_id_fkey', 'article_image', type_='foreignkey')
    
    # Proceed with the rest of your migration
    op.add_column('article', sa.Column('article_id', sa.Integer(), autoincrement=True, nullable=False))
    op.add_column('article', sa.Column('summary', sa.String(), nullable=True))
    # ... (other alterations)
    op.drop_column('article', 'content')
    op.drop_column('article', 'image')
    op.drop_column('article', 'id')
    op.drop_column('article', 'analysis')
    op.drop_column('article', 'is_article_efficent')
    op.drop_column('article', 'is_top_story')
    # Add new foreign key relationships if needed
    op.create_foreign_key(None, 'article_image', 'article', ['article_id'], ['article_id'])
    op.create_foreign_key(None, 'used_keywords', 'article', ['article_id'], ['article_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_table', 'birth_date',
               existing_type=sa.String(),
               type_=sa.DATE(),
               existing_nullable=True)
    op.alter_column('user_table', 'email_verified',
               existing_type=sa.Boolean(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_constraint(None, 'used_keywords', type_='foreignkey')
    op.create_foreign_key('used_keywords_article_id_fkey', 'used_keywords', 'article', ['article_id'], ['id'])
    op.alter_column('topics', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.add_column('tokens', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.create_foreign_key('tokens_admin_id_fkey', 'tokens', 'admins', ['admin_id'], ['admin_id'])
    op.add_column('roles', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_constraint('uq_user_plan', 'purchased_plan', type_='unique')
    op.alter_column('purchased_plan', 'is_subscribed',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('purchased_plan', 'price',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('purchased_plan', 'reference_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('notifications', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False)
    op.alter_column('narrative_trading', 'image_url',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'coin_bot', type_='foreignkey')
    op.create_foreign_key('coin_bot_category_id_fkey', 'coin_bot', 'category', ['category_id'], ['category_id'])
    op.alter_column('category', 'alias',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint(None, 'article_image', type_='foreignkey')
    op.create_foreign_key('article_image_article_id_fkey', 'article_image', 'article', ['article_id'], ['id'])
    op.add_column('article', sa.Column('used_keywords', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('article', sa.Column('is_top_story', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('article', sa.Column('is_article_efficent', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('article', sa.Column('analysis', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('article', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('article_article_id_seq'::regclass)"), autoincrement=True, nullable=False))
    op.add_column('article', sa.Column('image', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('article', sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column('article', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('article', 'url',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('article', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('article', 'date',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('article', 'summary')
    op.drop_column('article', 'article_id')
    op.drop_constraint(None, 'analysis', type_='foreignkey')
    op.create_foreign_key('analysis_coin_bot_id_fkey', 'analysis', 'coin_bot', ['coin_bot_id'], ['bot_id'], ondelete='CASCADE')
    op.drop_constraint(None, 'admins', type_='unique')
    op.alter_column('admins', 'auth_token',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), autoincrement=False, nullable=False),
    sa.Column('next_run_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('job_state', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='apscheduler_jobs_pkey')
    )
    op.create_index('ix_apscheduler_jobs_next_run_time', 'apscheduler_jobs', ['next_run_time'], unique=False)
    # ### end Alembic commands ###
