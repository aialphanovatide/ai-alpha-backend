"""Update category table columns

Revision ID: 1e4379d14669
Revises: 7b2c360b1115
Create Date: 2024-09-06 10:29:04.673989

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import inspect

# revision identifiers, used by Alembic.
revision: str = '1e4379d14669'
down_revision: Union[str, None] = '7b2c360b1115'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def get_existing_columns(table_name):
    conn = op.get_bind()
    inspector = inspect(conn)
    return [col['name'] for col in inspector.get_columns(table_name)]

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    analysis_columns = get_existing_columns('analysis')
    category_columns = get_existing_columns('category')
    narrative_trading_columns = get_existing_columns('narrative_trading')
    user_table_columns = get_existing_columns('user_table')

    if 'image' in analysis_columns:
        op.drop_column('analysis', 'image')

    if 'category_name' in category_columns:
        op.alter_column('category', 'category_name', new_column_name='name')

    if 'alias' not in category_columns:
        op.add_column('category', sa.Column('alias', sa.String(), nullable=True, default='NA'))

    if 'time_interval' in category_columns:
        op.drop_column('category', 'time_interval')

    if 'category' in category_columns:
        op.drop_column('category', 'category')

    if 'image' in narrative_trading_columns:
        op.drop_column('narrative_trading', 'image')

    if 'email_verified' in user_table_columns:
        op.alter_column('user_table', 'email_verified',
                   existing_type=sa.BOOLEAN(),
                   type_=sa.String(),
                   existing_nullable=True)

    if 'user_group' in user_table_columns:
        op.drop_column('user_table', 'user_group')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    user_table_columns = get_existing_columns('user_table')
    narrative_trading_columns = get_existing_columns('narrative_trading')
    category_columns = get_existing_columns('category')
    analysis_columns = get_existing_columns('analysis')

    if 'user_group' not in user_table_columns:
        op.add_column('user_table', sa.Column('user_group', sa.VARCHAR(length=255), autoincrement=False, nullable=True))

    if 'email_verified' in user_table_columns:
        op.alter_column('user_table', 'email_verified',
                   existing_type=sa.String(),
                   type_=sa.BOOLEAN(),
                   existing_nullable=True)

    if 'image' not in narrative_trading_columns:
        op.add_column('narrative_trading', sa.Column('image', sa.VARCHAR(length=255), autoincrement=False, nullable=False))

    if 'category' not in category_columns:
        op.add_column('category', sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False))

    if 'time_interval' not in category_columns:
        op.add_column('category', sa.Column('time_interval', sa.INTEGER(), autoincrement=False, nullable=True))

    if 'alias' in category_columns:
        op.drop_column('category', 'alias')

    if 'name' in category_columns:
        op.drop_column('category', 'name')

    if 'category_name' not in category_columns:
        op.add_column('category', sa.Column('category_name', sa.VARCHAR(), autoincrement=False, nullable=False))

    if 'image' not in analysis_columns:
        op.add_column('analysis', sa.Column('image', sa.VARCHAR(length=255), autoincrement=False, nullable=False))

    if not op.get_bind().dialect.has_table(op.get_bind(), 'notifications'):
        op.create_table('notifications',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('topic', sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint('id', name='notifications_pkey')
        )
    # ### end Alembic commands ###

# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_column('analysis', 'image')
#     op.alter_column('category', 'category_name', new_column_name='name')
#     op.add_column('category', sa.Column('alias', sa.String(), nullable=False))
#     op.drop_column('category', 'time_interval')
#     op.drop_column('category', 'category')
#     op.drop_column('narrative_trading', 'image')
#     op.alter_column('user_table', 'email_verified',
#                existing_type=sa.BOOLEAN(),
#                type_=sa.String(),
#                existing_nullable=True)
#     op.drop_column('user_table', 'user_group')
#     # ### end Alembic commands ###


# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.add_column('user_table', sa.Column('user_group', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
#     op.alter_column('user_table', 'email_verified',
#                existing_type=sa.String(),
#                type_=sa.BOOLEAN(),
#                existing_nullable=True)
#     op.add_column('narrative_trading', sa.Column('image', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
#     op.add_column('category', sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False))
#     op.add_column('category', sa.Column('time_interval', sa.INTEGER(), autoincrement=False, nullable=True))
#     op.drop_column('category', 'alias')
#     op.drop_column('category', 'name')
#     op.add_column('category', sa.Column('category_name', sa.VARCHAR(), autoincrement=False, nullable=False))
#     op.add_column('analysis', sa.Column('image', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
#     op.create_table('notifications',
#     sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
#     sa.Column('topic', sa.VARCHAR(), autoincrement=False, nullable=False),
#     sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
#     sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
#     sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
#     sa.PrimaryKeyConstraint('id', name='notifications_pkey')
#     )
#     # ### end Alembic commands ###
